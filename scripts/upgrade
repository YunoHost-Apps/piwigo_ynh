#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# Boring backward compatibility
if [ "${language:-}" == "fr" ] ; then
  language="fr_FR"
else
  language="en_UK"
fi

if [ -z "${password:-}" ] && [ -n "${admin_pwd:-}" ] ; then
  ynh_app_setting_set_default --key=password --value"$admin_pwd"
  ynh_app_setting_delete --key=admin_pwd
fi

ynh_app_setting_set_default --key=php_upload_max_filesize --value=100M
ynh_app_setting_set_default --key=php_memory_limit --value=64M

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="local/config/config.inc.php local/config/database.inc.php /plugins /themes"
ynh_setup_source --dest_dir="$install_dir/plugins/Ldap_Login" --source_id=ldap_plugin #--full_replace
ynh_setup_source --dest_dir="$install_dir/plugins" --source_id=log_failed_logins_plugin #--full_replace

_create_data_dirs_if_required

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_config_add_phpfpm

ynh_config_add_nginx

#=================================================
# UPGRADE APPLICATION WITH CURL
#=================================================
ynh_script_progression "Upgrading $app with cURL..."

# Upgrade Piwigo via cURL
# Why can't we trigger the migration from the command line somehow...
ynh_local_curl "/upgrade.php?language=$language&now=true" "language=$language" "username=$admin" "password=$password"

#=================================================
# CONFIGURE PIWIGO
#=================================================
ynh_script_progression "Configuring $app..."

# Change local config
ynh_config_add --template="config.inc.php" --destination="$install_dir/local/config/config.inc.php"

# Setup database in local/config/database.inc.php
ynh_config_add --template="database.inc.php" --destination="$install_dir/local/config/database.inc.php"

#=================================================
# CONFIGURE LDAP PLUGIN
#=================================================
ynh_script_progression "Configuring LDAP plugin..."

# Disable LDAP plugin to avoid warning messages during API call
ynh_mysql_db_shell <<< "DELETE FROM plugins WHERE id='Ldap_Login';"

# Activate the LDAP plugin using the WS API

# Login with admin account

# ... isn't there a way to enable the damn LDAP login plugin from the command line or something ...
ynh_local_curl "/ws.php?format=json" "method=pwg.session.login" "username=$admin" "password=$password"

# Get session token
status=$(ynh_local_curl "/ws.php?format=json" "method=pwg.session.getStatus")
pwg_token=$(jq --raw-output .result.pwg_token <<< "$status")

# Activate the Ldap_Login plugin
ynh_local_curl "/ws.php?format=json" "method=pwg.plugins.performAction" "action=activate" "plugin=Ldap_Login" "pwg_token=$pwg_token"

# Log out
ynh_local_curl "/ws.php?format=json" "method=pwg.session.logout"

# Edit Ldap_Login plugin configuration
ynh_mysql_db_shell <<< "UPDATE ldap_login_config SET value='ou=users,dc=yunohost,dc=org' WHERE param = 'ld_basedn';
UPDATE ldap_login_config SET value='uid' WHERE param = 'ld_user_attr';
UPDATE ldap_login_config SET value='' WHERE param = 'ld_binddn';
UPDATE ldap_login_config SET value='0' WHERE param = 'allow_new_users';
UPDATE ldap_login_config SET value='0' WHERE param = 'ld_group_user_active';"

# Remove configuration file for older plugin version
if [ -f "$install_dir/plugins/Ldap_Login/data.dat" ] ; then
    ynh_safe_rm "$install_dir/plugins/Ldap_Login/data.dat"
fi

#=================================================
# UPGRADE FAIL2BAN
#=================================================
ynh_script_progression "Reconfiguring Fail2Ban..."

# Configure and activate log_failed_logins plugin
if ! ynh_mysql_db_shell <<< "INSERT INTO plugins (id,state,version) VALUES ('log_failed_logins','active','1.2');" 2>&1 > /dev/null; then
    ynh_mysql_db_shell <<< "UPDATE plugins SET state='active' WHERE id='log_failed_logins';"
fi
if ! ynh_mysql_db_shell <<< "INSERT INTO config (param, value) VALUES ('logFailedLoginsFilename','/var/log/${app}FailedLogins.log');" 2>&1 > /dev/null; then
    ynh_mysql_db_shell <<< "UPDATE config SET value='/var/log/${app}FailedLogins.log' WHERE param='logFailedLoginsFilename';"
fi

touch "/var/log/${app}FailedLogins.log"
chown "$app:" "/var/log/${app}FailedLogins.log"

ynh_config_add_fail2ban --logpath="/var/log/${app}FailedLogins.log" --failregex="ip=<HOST>"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
